name: 'Run Tests'
on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
  cancel-in-progress: true

jobs:
  code-quality-checks:
    name: 'Code Quality Checks'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
      - name: 'Install dependencies'
        run: |
          curl -sSL https://install.python-poetry.org | sudo bash -c 'POETRY_HOME=/usr python3 -'
          poetry --version
      - name: 'Build and run code quality checks'
        run: make check

  all-tests:
    needs: code-quality-checks
    name: 'All tests'
    runs-on: [self-hosted, linux, normal]
    strategy:
      matrix:
        distro: ['focal', 'jammy']
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
      - name: 'Build Docker image'
        run: |
          COMMIT=$(git rev-parse --short=7 HEAD)
          TAG={% raw %}${{ matrix.os }}{% endraw %}
          CONTAINER={{ cookiecutter.project_slug }}-ci
          IMAGE=runtimeverificationinc/${CONTAINER}:${TAG}

          docker build .           \
            --build-arg TAG=${TAG} \
            --tag ${IMAGE}

          docker run                 \
            --name ${CONTAINER}      \
            --rm                     \
            --interactive            \
            --tty                    \
            --detach                 \
            ${IMAGE}

          docker cp . ${CONTAINER}:/home/user
          docker exec ${CONTAINER} chown -R user:user /home/user
      - name: 'Build and run all tests'
        run: docker exec --user user --workdir /home/user ${CONTAINER} make all
      - name: 'Tear down Docker container'
        if: always()
        run: |
          docker stop --time=0 ${CONTAINER}

  build-on-nix:
    needs: code-quality-checks
    name: 'Build on Nix'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-11]
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
      - name: 'Install Nix'
        uses: cachix/install-nix-action@v15
        with:
          extra_nix_config: |
            substituters = http://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: 'Install Cachix'
        uses: cachix/cachix-action@v10
        with:
          name: runtimeverification
          signingKey: {% raw %}'${{ secrets.CACHIX_SIGNING_KEY }}'{% endraw %}

      - name: 'Build {{ cookiecutter.project_slug }}'
        run: GC_DONT_GC=1 nix build .#{{ cookiecutter.project_slug }}
